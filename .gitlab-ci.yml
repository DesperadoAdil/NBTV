image: ccr.ccs.tencentyun.com/thusepi/deployer
<<<<<<< HEAD
=======

>>>>>>> 0450a1fb955c489bd5c348f44436f0948e844b45
stages:
  - build
  - test
  - deploy
<<<<<<< HEAD
build-master:
  stage: build
  script: 
    - export BUILD_IMAGE_NAME=$CI_REGISTRY_IMAGE
    - export BUILD_IMAGE_TAG=$CI_COMMIT_REF_SLUG
    - export BUILD_IMAGE_USERNAME=$CI_REGISTRY_USER
    - export BUILD_IMAGE_PASSWORD=$CI_REGISTRY_PASSWORD
    - deployer build
  only:
    - master
=======

>>>>>>> 0450a1fb955c489bd5c348f44436f0948e844b45
build:
  stage: build
  script:
    - export BUILD_IMAGE_NAME=$CI_REGISTRY_IMAGE
    - export BUILD_IMAGE_TAG=$CI_COMMIT_REF_SLUG
    - export BUILD_IMAGE_USERNAME=$CI_REGISTRY_USER
    - export BUILD_IMAGE_PASSWORD=$CI_REGISTRY_PASSWORD
    - deployer build
<<<<<<< HEAD
  except:
    - master

# 该阶段的内容应出现在unit-test部分，由于该仓库未能通过单元测试，故单列出来。。。
e2e-test:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  variables:
    GIT_STRATEGY: none
  before_script:
    # Update aptitude's package sources
    - apt-get -qq update -y
    # Install latest Chrome stable, Xvfb packages
    - apt-get -qq install -y
        xvfb gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable imagemagick x11-apps default-jre
        fonts-liberation libappindicator3-1 libxss1 lsb-release xdg-utils
        psmisc
    - wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - dpkg -i google-chrome-stable_current_amd64.deb
    # Launch Xvfb
    - Xvfb :99 -ac -screen 0 1024x768x24 &
    # Export display for Chrome
    - export DISPLAY=:99
  script:
    - java -version
    - cd $TEST_ROOT
    - npm run e2e
    - E2E_RET=$?
    - killall Xvfb
    - exit $E2E_RET

unit-test:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  variables:
    GIT_STRATEGY: none
  script:
    - cd $TEST_ROOT
    - npm test
  after_script:
    - cd $TEST_ROOT
    - SUFFIX=$RANDOM
    - curl "http://10.0.0.11/sonar-scanner.tar.gz" -s -o "/tmp/sonar-$SUFFIX.tar.gz"
    - tar -xf "/tmp/sonar-$SUFFIX.tar.gz" -C /opt
=======

unit-test:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: test
  script:
    - coverage run --source . -m test --junit-xml=xunit-reports/xunit-result.xml
    - ret=$?
    - coverage xml -o coverage-reports/coverage.xml
    - coverage report
    - exit $ret
  after_script:
    - wget -q "http://10.0.0.11/sonar-scanner.tar.gz"
    - tar -xf sonar-scanner.tar.gz -C /opt
    - rm sonar-scanner.tar.gz
>>>>>>> 0450a1fb955c489bd5c348f44436f0948e844b45
    - /opt/sonar-scanner/bin/sonar-scanner

deploy:
  stage: deploy
  script:
<<<<<<< HEAD
    - export DEPLOY_ENV="$CI_PROJECT_NAMESPACE"
    - deployer dyno replace $CI_PROJECT_NAME "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" "$REGISTRY_USER" "$REGISTRY_PWD"
=======
    - deployer dyno replace $CI_PROJECT_NAME "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" "$REGISTRY_USER" "$REGISTRY_PWD"
  only:
    - master
>>>>>>> 0450a1fb955c489bd5c348f44436f0948e844b45
