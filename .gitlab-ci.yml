image: ccr.ccs.tencentyun.com/thusepi/deployer

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - export BUILD_IMAGE_NAME=$CI_REGISTRY_IMAGE
    - export BUILD_IMAGE_TAG=$CI_COMMIT_REF_SLUG
    - export BUILD_IMAGE_USERNAME=$CI_REGISTRY_USER
    - export BUILD_IMAGE_PASSWORD=$CI_REGISTRY_PASSWORD
    - deployer build

unit-test:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: test
#  before_script:
#    - echo "deb http://mirrors.tencentyun.com/ubuntu/ xenial main restricted universe multiverse" > /etc/apt/sources.list
#    - echo "deb http://mirrors.tencentyun.com/ubuntu/ xenial-security main restricted universe multiverse" >> /etc/apt/sources.list
#    - echo "deb http://mirrors.tencentyun.com/ubuntu/ xenial-updates main restricted universe multiverse" >> /etc/apt/sources.list
#    - apt-get -qq update -y
#    - apt-get install -y --no-install-recommends openjdk-8-jre
    # Install latest Chrome stable, Xvfb packages
#    - apt-get -qq install -y
#        xvfb gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable imagemagick x11-apps default-jre
#        fonts-liberation libappindicator3-1 libxss1 lsb-release xdg-utils
#        psmisc
#    - wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
#    - dpkg -i google-chrome-stable_current_amd64.deb
    # Launch Xvfb
#    - Xvfb :99 -ac -screen 0 1024x768x24 &
    # Export display for Chrome
#    - export DISPLAY=:99
  script:
  # 进入flask目录，注意保证测试报告的相对原始路径和sonar-project.properties的配置一样
  # python 测试
    # - cd app
    - coverage run --source . -m test --junit-xml=xunit-reports/xunit-result.xml
    - PYTHON_RET=$?
    - coverage xml -o coverage-reports/coverage.xml
    - coverage report
    # - cd $(vue目录)
    # vue 测试
    # 首先安装依赖
    #- CHROMEDRIVER_CDNURL=https://npm.taobao.org/mirrors/chromedriver npm install
    #- npm test
    #- NODE_RET=$?
    #- killall Xvfb
    # 向gitlab runner 返回测试通过与否
    - if [ $PYTHON_RET \> 0 ]; then exit $PYTHON_RET; fi;
    #- exit $NODE_RET
  after_script:
    #- cd app
    - wget -q "http://10.0.0.11/sonar-scanner.tar.gz"
    - tar -xf sonar-scanner.tar.gz -C /opt
    - rm sonar-scanner.tar.gz
    - /opt/sonar-scanner/bin/sonar-scanner

deploy:
  stage: deploy
  script:
    - deployer dyno replace $CI_PROJECT_NAME "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" "$REGISTRY_USER" "$REGISTRY_PWD"
  only:
    - master
